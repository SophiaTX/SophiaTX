#include <sophiatx/protocol/get_config.hpp>
#include <sophiatx/protocol/config.hpp>
#include <sophiatx/protocol/asset.hpp>
#include <sophiatx/protocol/types.hpp>
#include <sophiatx/protocol/version.hpp>

namespace sophiatx { namespace protocol {

fc::variant_object get_config()
{
   fc::mutable_variant_object result;

#ifdef IS_TEST_NET
   result[ "IS_TEST_NET" ] = true;
   result["TESTNET_BLOCK_LIMIT"] = TESTNET_BLOCK_LIMIT;
#else
   result[ "IS_TEST_NET" ] = false;
#endif
#ifdef SOPHIATX_ENABLE_SMT
   result[ "SOPHIATX_ENABLE_SMT" ] = true;
   result["SMT_VESTING_WITHDRAW_INTERVAL_SECONDS"] = SMT_VESTING_WITHDRAW_INTERVAL_SECONDS;
   result["SMT_UPVOTE_LOCKOUT"] = SMT_UPVOTE_LOCKOUT;
   result["SMT_MAX_VOTABLE_ASSETS"] = SMT_MAX_VOTABLE_ASSETS;
#else
   result[ "SOPHIATX_ENABLE_SMT" ] = false;
#endif

   result["SBD1_SYMBOL"] = SBD1_SYMBOL;
   result["SBD2_SYMBOL"] = SBD2_SYMBOL;
   result["SBD3_SYMBOL"] = SBD3_SYMBOL;
   result["SBD4_SYMBOL"] = SBD4_SYMBOL;
   result["SBD5_SYMBOL"] = SBD5_SYMBOL;
   result["SOPHIATX_100_PERCENT"] = SOPHIATX_100_PERCENT;
   result["SOPHIATX_1_PERCENT"] = SOPHIATX_1_PERCENT;
   result["SOPHIATX_ACCOUNT_RECOVERY_REQUEST_EXPIRATION_PERIOD"] = SOPHIATX_ACCOUNT_RECOVERY_REQUEST_EXPIRATION_PERIOD;
   result["SOPHIATX_ACTIVE_CHALLENGE_COOLDOWN"] = SOPHIATX_ACTIVE_CHALLENGE_COOLDOWN;
   result["SOPHIATX_ACTIVE_CHALLENGE_FEE"] = SOPHIATX_ACTIVE_CHALLENGE_FEE;
   result["SOPHIATX_ADDRESS_PREFIX"] = SOPHIATX_ADDRESS_PREFIX;
   result["SOPHIATX_APR_PERCENT_MULTIPLY_PER_BLOCK"] = SOPHIATX_APR_PERCENT_MULTIPLY_PER_BLOCK;
   result["SOPHIATX_APR_PERCENT_MULTIPLY_PER_HOUR"] = SOPHIATX_APR_PERCENT_MULTIPLY_PER_HOUR;
   result["SOPHIATX_APR_PERCENT_MULTIPLY_PER_ROUND"] = SOPHIATX_APR_PERCENT_MULTIPLY_PER_ROUND;
   result["SOPHIATX_APR_PERCENT_SHIFT_PER_BLOCK"] = SOPHIATX_APR_PERCENT_SHIFT_PER_BLOCK;
   result["SOPHIATX_APR_PERCENT_SHIFT_PER_HOUR"] = SOPHIATX_APR_PERCENT_SHIFT_PER_HOUR;
   result["SOPHIATX_APR_PERCENT_SHIFT_PER_ROUND"] = SOPHIATX_APR_PERCENT_SHIFT_PER_ROUND;
   result["SOPHIATX_BANDWIDTH_AVERAGE_WINDOW_SECONDS"] = SOPHIATX_BANDWIDTH_AVERAGE_WINDOW_SECONDS;
   result["SOPHIATX_BANDWIDTH_PRECISION"] = SOPHIATX_BANDWIDTH_PRECISION;
   result["SOPHIATX_BLOCKCHAIN_PRECISION"] = SOPHIATX_BLOCKCHAIN_PRECISION;
   result["SOPHIATX_BLOCKCHAIN_PRECISION_DIGITS"] = SOPHIATX_BLOCKCHAIN_PRECISION_DIGITS;
   result["SOPHIATX_BLOCKCHAIN_HARDFORK_VERSION"] = SOPHIATX_BLOCKCHAIN_HARDFORK_VERSION;
   result["SOPHIATX_BLOCKCHAIN_VERSION"] = SOPHIATX_BLOCKCHAIN_VERSION;
   result["SOPHIATX_BLOCK_INTERVAL"] = SOPHIATX_BLOCK_INTERVAL;
   result["SOPHIATX_BLOCKS_PER_DAY"] = SOPHIATX_BLOCKS_PER_DAY;
   result["SOPHIATX_BLOCKS_PER_HOUR"] = SOPHIATX_BLOCKS_PER_HOUR;
   result["SOPHIATX_BLOCKS_PER_YEAR"] = SOPHIATX_BLOCKS_PER_YEAR;
   result["SOPHIATX_CASHOUT_WINDOW_SECONDS"] = SOPHIATX_CASHOUT_WINDOW_SECONDS;
   result["SOPHIATX_CREATE_ACCOUNT_DELEGATION_RATIO"] = SOPHIATX_CREATE_ACCOUNT_DELEGATION_RATIO;
   result["SOPHIATX_CREATE_ACCOUNT_DELEGATION_TIME"] = SOPHIATX_CREATE_ACCOUNT_DELEGATION_TIME;
   result["SOPHIATX_FEED_HISTORY_WINDOW"] = SOPHIATX_FEED_HISTORY_WINDOW;
   result["SOPHIATX_FEED_INTERVAL_BLOCKS"] = SOPHIATX_FEED_INTERVAL_BLOCKS;
   result["SOPHIATX_GENESIS_TIME"] = SOPHIATX_GENESIS_TIME;
   result["SOPHIATX_HARDFORK_REQUIRED_WITNESSES"] = SOPHIATX_HARDFORK_REQUIRED_WITNESSES;
   result["SOPHIATX_INIT_MINER_NAME"] = SOPHIATX_INIT_MINER_NAME;
   result["SOPHIATX_INIT_PUBLIC_KEY_STR"] = SOPHIATX_INIT_PUBLIC_KEY_STR;
#if 0
   // do not expose private key, period.
   // we need this line present but inactivated so CI check for all constants in config.hpp doesn't complain.
   result["SOPHIATX_INIT_PRIVATE_KEY"] = SOPHIATX_INIT_PRIVATE_KEY;
#endif
   result["SOPHIATX_INIT_SUPPLY"] = SOPHIATX_INIT_SUPPLY;
   result["SOPHIATX_INIT_TIME"] = SOPHIATX_INIT_TIME;
   result["SOPHIATX_IRREVERSIBLE_THRESHOLD"] = SOPHIATX_IRREVERSIBLE_THRESHOLD;
   result["SOPHIATX_MAX_ACCOUNT_NAME_LENGTH"] = SOPHIATX_MAX_ACCOUNT_NAME_LENGTH;
   result["SOPHIATX_MAX_ACCOUNT_WITNESS_VOTES"] = SOPHIATX_MAX_ACCOUNT_WITNESS_VOTES;
   result["SOPHIATX_MAX_ASSET_WHITELIST_AUTHORITIES"] = SOPHIATX_MAX_ASSET_WHITELIST_AUTHORITIES;
   result["SOPHIATX_MAX_AUTHORITY_MEMBERSHIP"] = SOPHIATX_MAX_AUTHORITY_MEMBERSHIP;
   result["SOPHIATX_MAX_BLOCK_SIZE"] = SOPHIATX_MAX_BLOCK_SIZE;
   result["SOPHIATX_SOFT_MAX_BLOCK_SIZE"] = SOPHIATX_SOFT_MAX_BLOCK_SIZE;
   result["SOPHIATX_MAX_CASHOUT_WINDOW_SECONDS"] = SOPHIATX_MAX_CASHOUT_WINDOW_SECONDS;
   result["SOPHIATX_MAX_FEED_AGE_SECONDS"] = SOPHIATX_MAX_FEED_AGE_SECONDS;
   result["SOPHIATX_MAX_INSTANCE_ID"] = SOPHIATX_MAX_INSTANCE_ID;
   result["SOPHIATX_MAX_MEMO_SIZE"] = SOPHIATX_MAX_MEMO_SIZE;
   result["SOPHIATX_MAX_WITNESSES"] = SOPHIATX_MAX_WITNESSES;
   result["SOPHIATX_MAX_MINER_WITNESSES_HF0"] = SOPHIATX_MAX_MINER_WITNESSES_HF0;
   result["SOPHIATX_MAX_PERMLINK_LENGTH"] = SOPHIATX_MAX_PERMLINK_LENGTH;
   result["SOPHIATX_MAX_PROXY_RECURSION_DEPTH"] = SOPHIATX_MAX_PROXY_RECURSION_DEPTH;
   result["SOPHIATX_MAX_RATION_DECAY_RATE"] = SOPHIATX_MAX_RATION_DECAY_RATE;
   result["SOPHIATX_MAX_RESERVE_RATIO"] = SOPHIATX_MAX_RESERVE_RATIO;
   result["SOPHIATX_MAX_RUNNER_WITNESSES_HF0"] = SOPHIATX_MAX_RUNNER_WITNESSES_HF0;
   result["SOPHIATX_MAX_SATOSHIS"] = SOPHIATX_MAX_SATOSHIS;
   result["SOPHIATX_MAX_SHARE_SUPPLY"] = SOPHIATX_MAX_SHARE_SUPPLY;
   result["SOPHIATX_MAX_SIG_CHECK_DEPTH"] = SOPHIATX_MAX_SIG_CHECK_DEPTH;
   result["SOPHIATX_MAX_TIME_UNTIL_EXPIRATION"] = SOPHIATX_MAX_TIME_UNTIL_EXPIRATION;
   result["SOPHIATX_MAX_TRANSACTION_SIZE"] = SOPHIATX_MAX_TRANSACTION_SIZE;
   result["SOPHIATX_MAX_UNDO_HISTORY"] = SOPHIATX_MAX_UNDO_HISTORY;
   result["SOPHIATX_MAX_URL_LENGTH"] = SOPHIATX_MAX_URL_LENGTH;
   result["SOPHIATX_MAX_VOTE_CHANGES"] = SOPHIATX_MAX_VOTE_CHANGES;
   result["SOPHIATX_MAX_VOTED_WITNESSES_HF0"] = SOPHIATX_MAX_VOTED_WITNESSES_HF0;
   result["SOPHIATX_MAX_WITNESS_URL_LENGTH"] = SOPHIATX_MAX_WITNESS_URL_LENGTH;
   result["SOPHIATX_MIN_ACCOUNT_CREATION_FEE"] = SOPHIATX_MIN_ACCOUNT_CREATION_FEE;
   result["SOPHIATX_MIN_ACCOUNT_NAME_LENGTH"] = SOPHIATX_MIN_ACCOUNT_NAME_LENGTH;
   result["SOPHIATX_MIN_BLOCK_SIZE_LIMIT"] = SOPHIATX_MIN_BLOCK_SIZE_LIMIT;
   result["SOPHIATX_MIN_BLOCK_SIZE"] = SOPHIATX_MIN_BLOCK_SIZE;
   result["SOPHIATX_MIN_PERMLINK_LENGTH"] = SOPHIATX_MIN_PERMLINK_LENGTH;
   result["SOPHIATX_MIN_REPLY_INTERVAL"] = SOPHIATX_MIN_REPLY_INTERVAL;
   result["SOPHIATX_MIN_VOTE_INTERVAL_SEC"] = SOPHIATX_MIN_VOTE_INTERVAL_SEC;
   result["SOPHIATX_MINER_ACCOUNT"] = SOPHIATX_MINER_ACCOUNT;
   result["SOPHIATX_MINER_PAY_PERCENT"] = SOPHIATX_MINER_PAY_PERCENT;
   result["SOPHIATX_MIN_FEEDS"] = SOPHIATX_MIN_FEEDS;
   result["SOPHIATX_MINING_REWARD"] = SOPHIATX_MINING_REWARD;
   result["SOPHIATX_MIN_TRANSACTION_EXPIRATION_LIMIT"] = SOPHIATX_MIN_TRANSACTION_EXPIRATION_LIMIT;
   result["SOPHIATX_MIN_TRANSACTION_SIZE_LIMIT"] = SOPHIATX_MIN_TRANSACTION_SIZE_LIMIT;
   result["SOPHIATX_MIN_UNDO_HISTORY"] = SOPHIATX_MIN_UNDO_HISTORY;
   result["SOPHIATX_NULL_ACCOUNT"] = SOPHIATX_NULL_ACCOUNT;
   result["SOPHIATX_NUM_INIT_MINERS"] = SOPHIATX_NUM_INIT_MINERS;
   result["SOPHIATX_OWNER_AUTH_RECOVERY_PERIOD"] = SOPHIATX_OWNER_AUTH_RECOVERY_PERIOD;
   result["SOPHIATX_OWNER_CHALLENGE_COOLDOWN"] = SOPHIATX_OWNER_CHALLENGE_COOLDOWN;
   result["SOPHIATX_OWNER_CHALLENGE_FEE"] = SOPHIATX_OWNER_CHALLENGE_FEE;
   result["SOPHIATX_OWNER_UPDATE_LIMIT"] = SOPHIATX_OWNER_UPDATE_LIMIT;
   result["SOPHIATX_PROXY_TO_SELF_ACCOUNT"] = SOPHIATX_PROXY_TO_SELF_ACCOUNT;
   result["SOPHIATX_SECONDS_PER_YEAR"] = SOPHIATX_SECONDS_PER_YEAR;
   result["SOPHIATX_REVERSE_AUCTION_WINDOW_SECONDS"] = SOPHIATX_REVERSE_AUCTION_WINDOW_SECONDS;
   result["SOPHIATX_ROOT_POST_PARENT"] = SOPHIATX_ROOT_POST_PARENT;
   result["SOPHIATX_SECOND_CASHOUT_WINDOW"] = SOPHIATX_SECOND_CASHOUT_WINDOW;
   result["SOPHIATX_START_MINER_VOTING_BLOCK"] = SOPHIATX_START_MINER_VOTING_BLOCK;
   result["SOPHIATX_START_VESTING_BLOCK"] = SOPHIATX_START_VESTING_BLOCK;
   result["SOPHIATX_TEMP_ACCOUNT"] = SOPHIATX_TEMP_ACCOUNT;
   result["SOPHIATX_UPVOTE_LOCKOUT_HF7"] = SOPHIATX_UPVOTE_LOCKOUT_HF7;
   result["SOPHIATX_UPVOTE_LOCKOUT_HF17"] = SOPHIATX_UPVOTE_LOCKOUT_HF17;
   result["SOPHIATX_VESTING_WITHDRAW_INTERVALS"] = SOPHIATX_VESTING_WITHDRAW_INTERVALS;
   result["SOPHIATX_VESTING_WITHDRAW_INTERVAL_SECONDS"] = SOPHIATX_VESTING_WITHDRAW_INTERVAL_SECONDS;
   result["SOPHIATX_VOTE_DUST_THRESHOLD"] = SOPHIATX_VOTE_DUST_THRESHOLD;
   result["SOPHIATX_VOTE_REGENERATION_SECONDS"] = SOPHIATX_VOTE_REGENERATION_SECONDS;
   result["SOPHIATX_SYMBOL"] = SOPHIATX_SYMBOL;
   result["VESTS_SYMBOL"] = VESTS_SYMBOL;
   result["SOPHIATX_VIRTUAL_SCHEDULE_LAP_LENGTH"] = SOPHIATX_VIRTUAL_SCHEDULE_LAP_LENGTH;
   result["SOPHIATX_VIRTUAL_SCHEDULE_LAP_LENGTH2"] = SOPHIATX_VIRTUAL_SCHEDULE_LAP_LENGTH2;

   return result;
}

} } // sophiatx::protocol
